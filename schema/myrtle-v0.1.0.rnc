default namespace d = "http://ns.kaikoda.com/documentation/xml"

datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

start = doc

doc = element doc {

    title?,
    desc,
    input?,
    param*,
    return?,
    author*,
    contributor*,
    created?,
    note*,
    history?,
    
    doc.scope?,
    doc.ref
    
}

doc.scope = attribute scope {
    doc.scope.attribute.values
}

doc.ref = attribute ref {
    xsd:IDREF
}

doc.scope.attribute.values = (
    "stylesheet" |
    "schema" |
    "pattern" |
    "component"
)

inline.structure.model = 
    text & link

block.structure.model = (
    p | 
    sequence
)*

title = element title {
    inline.structure.model
}

desc = element desc {
    block.structure.model |
    inline.structure.model
}

input = element input {
    inline.structure.model
}

param = element param {
    inline.structure.model,
    
    attribute name {
        xsd:string
    }    
}    

return = element return {
    inline.structure.model
}

note = element note {
    (
        block.structure.model |
        inline.structure.model
    ),
    
    date?,
    todo?
}

history = element history {
    change*
}

change = element change {
    desc,
    related?,
    contributor*,
    
    (
        (version | date) |
        (version, date)
    )
    
}

date = attribute date {
    xsd:date
}

version = attribute version {
    xsd:string
}

todo = attribute todo {
    xsd:boolean
}

p = element p {
    inline.structure.model
}

created = element created {
    xsd:date
}

contributor.structure.model = 
    text
    
author = element author {
    contributor.structure.model
}

contributor = element contributor {
    contributor.structure.model
}

sequence = (
    ul |
    ol
)

sequence.structure.model = (
    ingress?,
    li*,
    egress?    
)

ul = element ul {
    sequence.structure.model
}

ol = element ol {
    sequence.structure.model
}

li = element li {
    sequence |
    inline.structure.model
}

ingress = element ingress {
    inline.structure.model
}

egress = element egress {
    inline.structure.model
}

link = element link {
    empty,
    link.href
}

link.ref = attribute ref {
    xsd:string
}

link.href = attribute href {
    xsd:anyURI
}

related = element related {
    change.link*
}

change.link = element link {
    
    empty,
    
    (
        link.ref | 
        link.href
    ),
    change.link.rel?
}

change.link.rel = attribute rel {
  change.link.rel.attribute.values
}

change.link.rel.attribute.values = (
    "epic" |
    "feature" |
    "story" |
    "task" |
    "bug" |
    "impediment"
)